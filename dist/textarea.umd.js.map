{"version":3,"file":"textarea.umd.js","sources":["../src/accessor.ts","../node_modules/classnames/index.js","../src/typeahead/option.tsx","../src/typeahead/selector.tsx","../src/keyevent.ts","../node_modules/fuzzy/lib/fuzzy.js","../src/typeahead/index.tsx","../src/tokenizer/token.tsx","../src/tokenizer/index.tsx"],"sourcesContent":["export default class Accessor {\n  // tslint:disable-next-line\n  static IDENTITY_FN<T>(input: T): T { return input; }\n\n  static generateAccessor(field: string) {\n    return (object: { [propName: string]: any }) => object[field];\n  }\n\n  static generateOptionToStringFor(prop?: string | Function) {\n    if (typeof prop === 'string') {\n      return Accessor.generateAccessor(prop);\n    } \n    \n    if (typeof prop === 'function') {\n      return prop;\n    }\n    \n    return Accessor.IDENTITY_FN;\n  }\n\n  static valueForOption<T>(\n    option: string | ((arg: T) => string), \n    object: T,\n  ): string | void {\n    if (typeof option === 'string') {\n      if (typeof object !== 'object') throw new Error(`Invalid object type ${typeof object}`);\n      // @ts-ignore\n      return object[option];\n    } \n    \n    if (typeof option === 'function') {\n      return option(object);\n    }\n\n    if (typeof object === 'string') {\n      return object;\n    }\n    \n    throw new Error(`Invalid object type ${typeof object}`);\n  }\n}\n","/*!\n  Copyright (c) 2016 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tclasses.push(classNames.apply(null, arg));\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import * as React from 'react';\nimport classNames from 'classnames';\n\nexport interface CustomClasses {\n  listItem?: string;\n  hover?: string;\n  customAdd?: string;\n  listAnchor?: string;\n}\n\nexport interface Props {\n  customClasses?: CustomClasses;\n  customValue?: string;\n  onClick: Function;\n  children: React.ReactNode;\n  hover?: boolean;\n}\n\n/**\n * A single option within the TypeaheadSelector\n */\nclass TypeaheadOption extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  private getDefaultProps() {\n    const customClasses: CustomClasses = { hover: 'hover' };\n    return {\n      customClasses,\n      onClick: (event: React.MouseEvent<HTMLDivElement>) => {\n        event.preventDefault();\n      },\n      hover: false,\n    };\n  }\n\n  render() {\n    const { \n      customClasses, hover,\n      children, customValue,\n     } = { ...this.getDefaultProps(), ...this.props };\n\n    const classes: any = {};\n    const { listItem, hover: hoverClass = 'hover', customAdd } = customClasses;\n    classes[hoverClass] = Boolean(hover);\n    if (listItem) {\n      classes[listItem] = Boolean(listItem);\n    }\n\n    if (customValue && customAdd) {\n      classes[customAdd] = Boolean(customAdd);\n    }\n\n    const classList = classNames(classes);\n\n    // For some reason onClick is not fired when clicked on an option\n    // onMouseDown is used here as a workaround of #205 and other\n    // related tickets\n    return (\n      <li className={classList} onClick={this.onClick} onMouseDown={this.onClick}>\n        <a \n          href=\"javascript: void 0;\" \n          className={this.getClasses()} \n          // tslint:disable-next-line:jsx-no-string-ref\n          ref=\"anchor\"\n        >\n          {children}\n        </a>\n      </li>\n    );\n  }\n\n  getClasses() {\n    const { customClasses } = { ...this.getDefaultProps(), ...this.props };\n    const classes: any = {\n      'typeahead-option': true,\n    };\n    const { listAnchor } = customClasses;\n    if (listAnchor) {\n      classes[listAnchor] = true;\n    }\n\n    return classNames(classes);\n  }\n\n  onClick(event: React.MouseEvent<HTMLLIElement>) {\n    event.preventDefault();\n    return this.props.onClick(event);\n  }\n}\n\nexport default TypeaheadOption;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport TypeaheadOption from './option';\nimport { CustomClasses, OptionSelector } from '../types';\n\nexport interface Props {\n  options: string[];\n  allowCustomValues?: number;\n  customClasses?: CustomClasses;\n  customValue?: string;\n  selectionIndex?: number;\n  onOptionSelected?: OptionSelector;\n  displayOption: Function;\n  defaultClassNames?: boolean;\n  areResultsTruncated?: boolean;\n  resultsTruncatedMessage?: string;\n}\n\n/**\n * Container for the options rendered as part of the autocompletion process\n * of the typeahead\n */\nclass TypeaheadSelector extends React.Component<Props> {\n  private getDefaultProps() {\n    const customClasses: CustomClasses = {};\n    return {\n      customClasses,\n      allowCustomValues: 0,\n      onOptionSelected: () => {},\n      defaultClassNames: true,\n    };\n  }\n\n  render() {\n    const { \n      options, customClasses, customValue, displayOption,\n      defaultClassNames, allowCustomValues, selectionIndex,\n      areResultsTruncated, resultsTruncatedMessage,\n    } = \n      { ...this.getDefaultProps(), ...this.props };\n    // Don't render if there are no options to display\n    if (!options.length && allowCustomValues <= 0) {\n      return false;\n    }\n\n    const classes: any = {\n      'typeahead-selector': defaultClassNames,\n    };\n    const { results: resClass } = customClasses;\n    if (resClass) {\n      classes[resClass] = true;\n    }\n    const classList = classNames(classes);\n\n    // CustomValue should be added to top of results list with different class name\n    let customValueComponent;\n    let customValueOffset = 0;\n    if (customValue) {\n      customValueOffset += 1;\n      customValueComponent = (\n        <TypeaheadOption \n          ref={customValue} \n          key={customValue}\n          hover={selectionIndex === 0}\n          customClasses={customClasses}\n          customValue={customValue}\n          onClick={this.onClick.bind(this, customValue)}\n        >\n          {customValue}\n        </TypeaheadOption>\n      );\n    }\n\n    const results = options.map((result, i) => {\n      const displayString = displayOption(result, i);\n      const uniqueKey = displayString + '_' + i;\n      return (\n        <TypeaheadOption \n          ref={uniqueKey} \n          key={uniqueKey}\n          hover={selectionIndex === i + customValueOffset}\n          customClasses={customClasses}\n          onClick={this.onClick.bind(this, result)}\n        >\n          {displayString}\n        </TypeaheadOption>\n      );\n    });\n\n    if (areResultsTruncated && resultsTruncatedMessage) {\n      const resultsTruncatedClasses: any = {\n        'results-truncated': defaultClassNames,\n      };\n      const { resultsTruncated } = customClasses;\n      if (resultsTruncated) {\n        resultsTruncatedClasses[resultsTruncated] = true;\n      }\n      const resultsTruncatedClassList = classNames(resultsTruncatedClasses);\n\n      results.push(\n        <li key=\"results-truncated\" className={resultsTruncatedClassList}>\n          {this.props.resultsTruncatedMessage}\n        </li>);\n    }\n\n    return (\n      <ul className={classList}>\n        {customValueComponent}\n        {results}\n      </ul>\n    );\n  }\n\n  private onClick(result: string, event: React.MouseEvent<HTMLDivElement>) {\n    const { onOptionSelected } = this.props;\n    if (!onOptionSelected) return;\n\n    return onOptionSelected(result, event);\n  }\n}\n\nexport default TypeaheadSelector;\n","/**\n * PolyFills make me sad\n */\n// @ts-ignore\nconst KeyEvent: { [propName: string]: number } = KeyEvent || {};\nKeyEvent.DOM_VK_UP = KeyEvent.DOM_VK_UP || 38;\nKeyEvent.DOM_VK_DOWN = KeyEvent.DOM_VK_DOWN || 40;\nKeyEvent.DOM_VK_BACK_SPACE = KeyEvent.DOM_VK_BACK_SPACE || 8;\nKeyEvent.DOM_VK_RETURN = KeyEvent.DOM_VK_RETURN || 13;\nKeyEvent.DOM_VK_ENTER = KeyEvent.DOM_VK_ENTER || 14;\nKeyEvent.DOM_VK_ESCAPE = KeyEvent.DOM_VK_ESCAPE || 27;\nKeyEvent.DOM_VK_TAB = KeyEvent.DOM_VK_TAB || 9;\n\nexport default KeyEvent;\n","/*\n * Fuzzy\n * https://github.com/myork/fuzzy\n *\n * Copyright (c) 2012 Matt York\n * Licensed under the MIT license.\n */\n\n(function() {\n\nvar root = this;\n\nvar fuzzy = {};\n\n// Use in node or in browser\nif (typeof exports !== 'undefined') {\n  module.exports = fuzzy;\n} else {\n  root.fuzzy = fuzzy;\n}\n\n// Return all elements of `array` that have a fuzzy\n// match against `pattern`.\nfuzzy.simpleFilter = function(pattern, array) {\n  return array.filter(function(str) {\n    return fuzzy.test(pattern, str);\n  });\n};\n\n// Does `pattern` fuzzy match `str`?\nfuzzy.test = function(pattern, str) {\n  return fuzzy.match(pattern, str) !== null;\n};\n\n// If `pattern` matches `str`, wrap each matching character\n// in `opts.pre` and `opts.post`. If no match, return null\nfuzzy.match = function(pattern, str, opts) {\n  opts = opts || {};\n  var patternIdx = 0\n    , result = []\n    , len = str.length\n    , totalScore = 0\n    , currScore = 0\n    // prefix\n    , pre = opts.pre || ''\n    // suffix\n    , post = opts.post || ''\n    // String to compare against. This might be a lowercase version of the\n    // raw string\n    , compareString =  opts.caseSensitive && str || str.toLowerCase()\n    , ch;\n\n  pattern = opts.caseSensitive && pattern || pattern.toLowerCase();\n\n  // For each character in the string, either add it to the result\n  // or wrap in template if it's the next string in the pattern\n  for(var idx = 0; idx < len; idx++) {\n    ch = str[idx];\n    if(compareString[idx] === pattern[patternIdx]) {\n      ch = pre + ch + post;\n      patternIdx += 1;\n\n      // consecutive characters should increase the score more than linearly\n      currScore += 1 + currScore;\n    } else {\n      currScore = 0;\n    }\n    totalScore += currScore;\n    result[result.length] = ch;\n  }\n\n  // return rendered string if we have a match for every char\n  if(patternIdx === pattern.length) {\n    // if the string is an exact match with pattern, totalScore should be maxed\n    totalScore = (compareString === pattern) ? Infinity : totalScore;\n    return {rendered: result.join(''), score: totalScore};\n  }\n\n  return null;\n};\n\n// The normal entry point. Filters `arr` for matches against `pattern`.\n// It returns an array with matching values of the type:\n//\n//     [{\n//         string:   '<b>lah' // The rendered string\n//       , index:    2        // The index of the element in `arr`\n//       , original: 'blah'   // The original element in `arr`\n//     }]\n//\n// `opts` is an optional argument bag. Details:\n//\n//    opts = {\n//        // string to put before a matching character\n//        pre:     '<b>'\n//\n//        // string to put after matching character\n//      , post:    '</b>'\n//\n//        // Optional function. Input is an entry in the given arr`,\n//        // output should be the string to test `pattern` against.\n//        // In this example, if `arr = [{crying: 'koala'}]` we would return\n//        // 'koala'.\n//      , extract: function(arg) { return arg.crying; }\n//    }\nfuzzy.filter = function(pattern, arr, opts) {\n  if(!arr || arr.length === 0) {\n    return [];\n  }\n  if (typeof pattern !== 'string') {\n    return arr;\n  }\n  opts = opts || {};\n  return arr\n    .reduce(function(prev, element, idx, arr) {\n      var str = element;\n      if(opts.extract) {\n        str = opts.extract(element);\n      }\n      var rendered = fuzzy.match(pattern, str, opts);\n      if(rendered != null) {\n        prev[prev.length] = {\n            string: rendered.rendered\n          , score: rendered.score\n          , index: idx\n          , original: element\n        };\n      }\n      return prev;\n    }, [])\n\n    // Sort by score. Browsers are inconsistent wrt stable/unstable\n    // sorting, so force stable by using the index in the case of tie.\n    // See http://ofb.net/~sethml/is-sort-stable.html\n    .sort(function(a,b) {\n      var compare = b.score - a.score;\n      if(compare) return compare;\n      return a.index - b.index;\n    });\n};\n\n\n}());\n\n","import * as React from 'react';\nimport Accessor from '../accessor';\nimport TypeaheadSelector, { Props as TypelistProps } from './selector';\nimport KeyEvent from '../keyevent';\nimport fuzzy, { FilterOptions } from 'fuzzy';\nimport classNames from 'classnames';\nimport { CustomClasses } from '../types';\nimport { Input, InputProps } from 'reactstrap';\n\nexport interface Props extends InputProps {\n  name?: string;\n  customClasses: CustomClasses;\n  maxVisible?: number;\n  resultsTruncatedMessage?: string;\n  options: string[];\n  allowCustomValues?: number;\n  initialValue?: string;\n  value?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  textarea?: boolean;\n  inputProps: object;\n  onOptionSelected?: Function;\n  filterOption?: string | Function;\n  searchOptions?: Function;\n  displayOption?: string | Function;\n  inputDisplayOption?: string | Function;\n  formInputOption?: string | Function;\n  defaultClassNames?: boolean;\n  customListComponent?: React.Component<TypelistProps>;\n  showOptionsWhenEmpty?: boolean;\n  innerRef?: (c: HTMLInputElement) => any;\n}\n\nexport interface State {\n  // The options matching the entry value\n  searchResults: string[];\n\n  // This should be called something else, \"entryValue\"\n  entryValue: string;\n\n  // A valid typeahead value\n  selection?: string;\n\n  // Index of the selection\n  selectionIndex?: number;\n\n  // Keep track of the focus state of the input element, to determine\n  // whether to show options when empty (if showOptionsWhenEmpty is true)\n  isFocused: boolean;\n\n  // true when focused, false onOptionSelected\n  showResults: boolean;\n}\n\n/**\n * A \"typeahead\", an auto-completing text input\n *\n * Renders an text input that shows options nearby that you can use the\n * keyboard or mouse to select.  Requires CSS for MASSIVE DAMAGE.\n */\nclass Typeahead extends React.Component<Props, State>{\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      // The options matching the entry value\n      searchResults: this.getOptionsForValue(props.initialValue, props.options),\n\n      // This should be called something else, \"entryValue\"\n      entryValue: props.value || '',\n\n      // A valid typeahead value\n      selection: props.value,\n\n      // Index of the selection\n      selectionIndex: undefined,\n\n      // Keep track of the focus state of the input element, to determine\n      // whether to show options when empty (if showOptionsWhenEmpty is true)\n      isFocused: false,\n\n      // true when focused, false onOptionSelected\n      showResults: false,\n    };\n  }\n\n  public inputElement?: HTMLInputElement;\n\n  getDefaultProps() {\n    return {\n      allowCustomValues: 0,\n      initialValue: '',\n      value: '',\n      disabled: false,\n      textarea: false,\n      customListComponent: TypeaheadSelector,\n      showOptionsWhenEmpty: false,\n      resultsTruncatedMessage: null,\n    };\n  }\n\n  private shouldSkipSearch(input?: string) {\n    const emptyValue = !input || input.trim().length === 0;\n\n    // this.state must be checked because it may not be defined yet if this function\n    // is called from within getInitialState\n    const isFocused = this.state && this.state.isFocused;\n    return !(this.props.showOptionsWhenEmpty && isFocused) && emptyValue;\n  }\n\n  getOptionsForValue(value?: string, options?: string[]) {\n    if (this.shouldSkipSearch(value)) { return []; }\n\n    const searchOptions = this.generateSearchFunction();\n    return searchOptions(value, options);\n  }\n\n  setEntryText(value: string) {\n    if (!this.inputElement) return;\n    this.inputElement.value = value;\n    this.onTextEntryUpdated( );\n  }\n\n  focus() {\n    if (!this.inputElement) return;\n    this.inputElement.focus();\n  }\n\n  private hasCustomValue() {\n    const { allowCustomValues } = { ...this.getDefaultProps, ...this.props };\n    const { entryValue, searchResults } = this.state;\n    \n    return (\n      allowCustomValues && \n      allowCustomValues > 0 &&\n      entryValue.length >= allowCustomValues &&\n      searchResults.indexOf(this.state.entryValue) < 0);\n  }\n\n  private getCustomValue() {\n    if (this.hasCustomValue()) {\n      return this.state.entryValue;\n    }\n    return null;\n  }\n\n  selectElement?: HTMLElement;\n  private renderIncrementalSearchResults() {\n    const { entryValue, selection, searchResults, selectionIndex } = this.state;\n    const {\n      // @ts-ignore\n      maxVisible, resultsTruncatedMessage, customListComponent, \n      allowCustomValues, customClasses, defaultClassNames,\n    } = {\n      ...this.getDefaultProps(),\n      ...this.props,\n    };\n\n    // Nothing has been entered into the textbox\n    if (this.shouldSkipSearch(entryValue)) {\n      return '';\n    }\n\n    // Something was just selected\n    if (selection) {\n      return '';\n    }\n\n    return (\n      // @ts-ignore\n      <customListComponent\n        innerRef={(c: HTMLElement) => this.selectElement = c}\n        options={maxVisible ? searchResults.slice(0, maxVisible) : searchResults}\n        areResultsTruncated={maxVisible && searchResults.length > maxVisible}\n        resultsTruncatedMessage={resultsTruncatedMessage}\n        onOptionSelected={this.onOptionSelected}\n        allowCustomValues={allowCustomValues}\n        customValue={this.getCustomValue()}\n        customClasses={customClasses}\n        selectionIndex={selectionIndex}\n        defaultClassNames={defaultClassNames}\n        displayOption={Accessor.generateOptionToStringFor(this.props.displayOption)} \n      />\n    );\n  }\n\n  getSelection() {\n    let index = this.state.selectionIndex;\n    if (index === undefined) throw new Error('No index set');\n    if (this.hasCustomValue()) {\n      if (index === 0) {\n        return this.state.entryValue;\n      }\n      index -= 1;\n    }\n    return this.state.searchResults[index];\n  }\n\n  private onOptionSelected(option: string, event: React.SyntheticEvent<any>) {\n    if (!this.inputElement) throw new Error('No input element');\n    this.inputElement.focus();\n\n    let { displayOption, formInputOption } = this.props;\n    displayOption = Accessor\n      .generateOptionToStringFor(this.props.inputDisplayOption || displayOption);\n    const optionString = displayOption(option, 0);\n\n    formInputOption = Accessor.generateOptionToStringFor(formInputOption || displayOption);\n    const formInputOptionString = formInputOption(option);\n\n    this.inputElement.value = optionString;\n    this.setState({\n      searchResults: this.getOptionsForValue(optionString, this.props.options),\n      selection: formInputOptionString,\n      entryValue: optionString,\n      showResults: false,\n    });\n    return this.props.onOptionSelected && this.props.onOptionSelected(option, event);\n  }\n\n  private onTextEntryUpdated() {\n    if (!this.inputElement) throw new Error('No input element');\n    const value = this.inputElement.value;\n    this.setState({\n      searchResults: this.getOptionsForValue(value, this.props.options),\n      selection: '',\n      entryValue: value,\n    });\n  }\n\n  private onEnter(event: React.KeyboardEvent<HTMLInputElement>) {\n    const selection = this.getSelection();\n    if (!selection) {\n      return this.props.onKeyDown && this.props.onKeyDown(event);\n    }\n    return this.onOptionSelected(selection, event);\n  }\n\n  private onEscape() {\n    this.setState({\n      selectionIndex: undefined,\n    });\n  }\n\n  private onTab(event: React.KeyboardEvent<HTMLInputElement>) {\n    const selection = this.getSelection();\n    let option = selection ?\n      selection : (this.state.searchResults.length > 0 ? this.state.searchResults[0] : null);\n\n    if (option === null && this.hasCustomValue()) {\n      option = this.getCustomValue();\n    }\n\n    if (option !== null) {\n      return this.onOptionSelected(option, event);\n    }\n  }\n\n  eventMap() {\n    const events: any = {};\n\n    events[KeyEvent.DOM_VK_UP] = this.navUp;\n    events[KeyEvent.DOM_VK_DOWN] = this.navDown;\n    events[KeyEvent.DOM_VK_RETURN] = events[KeyEvent.DOM_VK_ENTER] = this.onEnter;\n    events[KeyEvent.DOM_VK_ESCAPE] = this.onEscape;\n    events[KeyEvent.DOM_VK_TAB] = this.onTab;\n\n    return events;\n  }\n\n  private nav(delta: number) {\n    if (!this.hasHint()) {\n      return;\n    }\n    const { selectionIndex, searchResults } = this.state;\n    const { maxVisible } = this.props;\n    let newIndex = selectionIndex === undefined ? \n      (delta === 1 ? 0 : delta) : selectionIndex + delta;\n    let length = maxVisible ? searchResults.slice(0, maxVisible).length : searchResults.length;\n    if (this.hasCustomValue()) {\n      length += 1;\n    }\n\n    if (newIndex < 0) {\n      newIndex += length;\n    } else if (newIndex >= length) {\n      newIndex -= length;\n    }\n\n    this.setState({ selectionIndex: newIndex });\n  }\n\n  navDown() {\n    this.nav(1);\n  }\n\n  navUp() {\n    this.nav(-1);\n  }\n\n  private onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { onChange } = this.props;\n    if (onChange) {\n      onChange(event);\n    }\n\n    this.onTextEntryUpdated();\n  }\n\n  private onKeyDown(event: React.KeyboardEvent<HTMLInputElement>) {\n    // If there are no visible elements, don't perform selector navigation.\n    // Just pass this up to the upstream onKeydown handler.\n    // Also skip if the user is pressing the shift key, \n    // since none of our handlers are looking for shift\n    if (!this.hasHint() || event.shiftKey) {\n      return this.props.onKeyDown && this.props.onKeyDown(event);\n    }\n\n    const handler = this.eventMap()[event.keyCode];\n\n    if (handler) {\n      handler(event);\n    } else {\n      return this.props.onKeyDown && this.props.onKeyDown(event);\n    }\n    // Don't propagate the keystroke back to the DOM/browser\n    event.preventDefault();\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    const searchResults = this.getOptionsForValue(this.state.entryValue, nextProps.options);\n    const showResults = Boolean(searchResults.length) && this.state.isFocused;\n    this.setState({ searchResults, showResults });\n  }\n\n  render() {\n    const { customClasses: { input }, className } = { ...this.getDefaultProps(), ...this.props };\n    const inputClasses: any = {};\n    if (input) {\n      inputClasses[input] = true;\n    }\n    const inputClassList = classNames(inputClasses);\n\n    const classes: any = {\n      typeahead: this.props.defaultClassNames,\n    };\n    if (className) {\n      classes[className] = true;\n    }\n    const classList = classNames(classes);\n\n    return (\n      <div className={classList}>\n        {this.renderHiddenInput()}\n        <Input \n          innerRef={(c: HTMLInputElement) => {\n            this.inputElement = c;\n            this.props.innerRef && this.props.innerRef(c);\n          }}\n          type={this.props.textarea ? 'textarea' : 'text'}\n          disabled={this.props.disabled}\n          {...this.props.inputProps}\n          placeholder={this.props.placeholder}\n          className={inputClassList}\n          value={this.state.entryValue}\n          onChange={this.onChange}\n          onKeyDown={this.onKeyDown}\n          onKeyPress={this.props.onKeyPress}\n          onKeyUp={this.props.onKeyUp}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n        />\n        {this.state.showResults && this.renderIncrementalSearchResults()}\n      </div>\n    );\n  }\n\n  private onFocus(event: React.FocusEvent<HTMLInputElement>) {\n    this.setState({ isFocused: true, showResults: true }, () => {\n      this.onTextEntryUpdated();\n    });\n    if (this.props.onFocus) {\n      return this.props.onFocus(event);\n    }\n  }\n\n  private onBlur(event: React.FocusEvent<HTMLInputElement>) {\n    this.setState({ isFocused: false }, () => {\n      this.onTextEntryUpdated();\n    });\n    if (this.props.onBlur) {\n      return this.props.onBlur(event);\n    }\n  }\n\n  private renderHiddenInput() {\n    const { name } = this.props;\n    if (!name) {\n      return null;\n    }\n\n    return (\n      <input\n        type=\"hidden\"\n        name={name}\n        value={this.state.selection}\n      />\n    );\n  }\n\n  private generateSearchFunction() {\n    const { searchOptions, filterOption } = this.props;\n    if (typeof searchOptions === 'function') {\n      if (filterOption !== null) {\n        console.warn('searchOptions prop is being used, filterOption prop will be ignored');\n      }\n      return searchOptions;\n    } \n    \n    if (typeof filterOption === 'function') {\n      return (value: string, options: string[]) => {\n        return options.filter(o => filterOption(value, o));\n      };\n    }\n    \n    let mapper: (input: any) => string;\n    if (typeof filterOption === 'string') {\n      mapper = Accessor.generateAccessor(filterOption);\n    } else {\n      mapper = Accessor.IDENTITY_FN;\n    }\n    return (value: string, options: string[]) => {\n      const fuzzyOpt: FilterOptions<any> = { extract: mapper };\n      return fuzzy\n        .filter(value, options, fuzzyOpt)\n        .map((res: { index: number }) => options[res.index]);\n    };\n  }\n\n  private hasHint() {\n    return this.state.searchResults.length > 0 || this.hasCustomValue();\n  }\n}\n\nexport default Typeahead;\n","import * as React from 'react';\nimport classNames from 'classnames';\n\nexport interface Props {\n  className?: string;\n  name: string;\n  children: React.ReactNode | string;\n  object: string | object;\n  onRemove: Function;\n  value: string;\n  key?: string | number;\n}\n\n/**\n * Encapsulates the rendering of an option that has been \"selected\" in a\n * TypeaheadTokenizer\n */ \nclass Token extends React.Component<Props> {\n  \n  render() {\n    const className = classNames([\n      'typeahead-token',\n      this.props.className,\n    ]);\n\n    return (\n      <div className={className} key={this.props.key}>\n        {this.renderHiddenInput()}\n        {this.props.children}\n        {this.renderCloseButton()}\n      </div>\n    );\n  }\n\n  private renderHiddenInput() {\n    const { name, value, object } = this.props;\n    // If no name was set, don't create a hidden input\n    if (!name) {\n      return null;\n    }\n\n    const hiddenValue = value || object;\n    if (typeof hiddenValue !== 'string') {\n      throw new Error('Expected either string value or string object');\n    }\n    return (\n      <input\n        type=\"hidden\"\n        name={name + '[]'}\n        value={hiddenValue}\n      />\n    );\n  }\n\n  renderCloseButton() {\n    if (!this.props.onRemove) {\n      return '';\n    }\n\n    return (\n      <a\n        className={this.props.className || 'typeahead-token-close'} \n        href=\"#\" \n        onClick={(event: React.MouseEvent<HTMLAnchorElement>) => {\n          this.props.onRemove(this.props.object);\n          event.preventDefault();\n        }}\n      >\n        &#x00d7;\n      </a>);\n  }\n}\n\nexport default Token;\n","import * as React from 'react';\nimport Accessor from '../accessor';\nimport Token from './token';\nimport KeyEvent from '../keyevent';\nimport Typeahead from '../typeahead';\nimport classNames from 'classnames';\nimport { InputProps } from 'reactstrap';\nimport { TokenCustomClasses } from '../types';\n\nconst arraysAreDifferent = (array1: any[], array2: any[]): boolean => {\n  if (array1.length !== array2.length) {\n    return true;\n  }\n\n  for (let i = array2.length - 1; i >= 0; i -= 1) {\n    if (array2[i] !== array1[i]) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nexport interface Props extends InputProps {\n  name: string;\n  options: any[];\n  customClasses?: TokenCustomClasses;\n  allowCustomValues?: number;\n  defaultSelected: any[];\n  initialValue?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  inputProps: object;\n  onTokenRemove?: Function;\n  onTokenAdd?: Function;\n  filterOption?: string | Function;\n  searchOptions?: Function;\n  displayOption?: string | ((arg: any) => string);\n  formInputOption?: string | ((arg: any) => string);\n  maxVisible?: number;\n  resultsTruncatedMessage?: string;\n  defaultClassNames?: boolean;\n  showOptionsWhenEmpty?: boolean;\n}\n\nexport interface State {\n  selected: string[];\n}\n\n/**\n * A typeahead that, when an option is selected, instead of simply filling\n * the text entry widget, prepends a renderable \"token\", that may be deleted\n * by pressing backspace on the beginning of the line with the keyboard.\n */\nclass TypeaheadTokenizer extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      // We need to copy this to avoid incorrect sharing\n      // of state across instances (e.g., via getDefaultProps())\n      selected: this.props.defaultSelected.slice(0),\n    };\n  }\n\n  getDefaultProps() {\n    const customClasses: TokenCustomClasses = {};\n    return {\n      customClasses,\n      allowCustomValues: 0,\n      disabled: false,\n      inputProps: {},\n      defaultClassNames: true,\n      displayOption: (token: any) => token,\n      showOptionsWhenEmpty: false,\n    };\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    // if we get new defaultProps, update selected\n    if (arraysAreDifferent(this.props.defaultSelected, nextProps.defaultSelected)) {\n      this.setState({ selected: nextProps.defaultSelected.slice(0) });\n    }\n  }\n\n  typeaheadElement?: HTMLInputElement;\n  focus() {\n    if (!this.typeaheadElement) throw new Error('No typeahead element');\n    this.typeaheadElement.focus();\n  }\n\n  getSelectedTokens() {\n    return this.state.selected;\n  }\n\n  // TODO: Support initialized tokens\n  //\n  private renderTokens() {\n    const { \n      customClasses: { token }, displayOption, formInputOption, name,\n    } = { ...this.getDefaultProps(), ...this.props };\n    const tokenClasses: any = {};\n    if (token) tokenClasses[token] = true;\n    const classList: string = classNames(tokenClasses);\n\n    const result = this.state.selected\n      .map((selected) => {\n        const displayString = Accessor.valueForOption(displayOption, selected);\n        const value = Accessor.valueForOption(formInputOption || displayOption, selected);\n        if (!displayString || !value) throw new Error('Expected string and value to exist');\n\n        const key: string = displayString;\n        return (\n          <Token \n            key={key} \n            className={classList}\n            onRemove={this.removeTokenForValue}\n            object={selected}\n            value={value}\n            name={name}\n          >\n            {displayString}\n          </Token>\n        );\n      });\n    return result;\n  }\n\n  private getOptionsForTypeahead() {\n    // return this.props.options without this.selected\n    return this.props.options;\n  }\n\n  private onKeyDown(event: React.KeyboardEvent<HTMLInputElement>) {\n    // We only care about intercepting backspaces\n    if (event.keyCode === KeyEvent.DOM_VK_BACK_SPACE) {\n      return this.handleBackspace(event);\n    }\n    this.props.onKeyDown && this.props.onKeyDown(event);\n  }\n\n  private handleBackspace(event: React.KeyboardEvent<HTMLInputElement>) {\n    // No tokens\n    if (!this.state.selected.length) {\n      return;\n    }\n\n    // Remove token ONLY when bksp pressed at beginning of line\n    // without a selection\n    if (!this.typeaheadElement) throw new Error('Expected typeahead element to exist');\n    if (this.typeaheadElement.selectionStart === this.typeaheadElement.selectionEnd &&\n        this.typeaheadElement.selectionStart === 0) {\n      this.removeTokenForValue(\n        this.state.selected[this.state.selected.length - 1]);\n      event.preventDefault();\n    }\n  }\n\n  private removeTokenForValue(value: string) {\n    const index = this.state.selected.indexOf(value);\n    if (index === -1) {\n      return;\n    }\n\n    this.state.selected.splice(index, 1);\n    this.setState({ selected: this.state.selected });\n    this.props.onTokenRemove && this.props.onTokenRemove(value);\n    return;\n  }\n\n  private addTokenForValue(value: string) {\n    let { selected } = this.state;\n    if (selected.indexOf(value) !== -1) {\n      return;\n    }\n    selected = [...selected, value];\n    this.setState({ selected });\n    \n    if (!this.typeaheadElement) throw new Error('Expected typahead to be set');\n\n    this.typeaheadElement.value = '';\n    this.props.onTokenAdd && this.props.onTokenAdd(value);\n  }\n\n  render() {\n    const { \n      className, customClasses = {}, disabled, inputProps,\n      allowCustomValues, initialValue = '',\n      maxVisible, resultsTruncatedMessage, placeholder,\n      onKeyPress, onKeyUp, onFocus, onBlur,\n      displayOption, defaultClassNames, filterOption, searchOptions,\n      showOptionsWhenEmpty,\n    } = { ...this.getDefaultProps(), ...this.props };\n    const classes: any = {};\n    const { typeahead } = customClasses;\n    if (typeahead) {\n      classes[typeahead] = true;\n    }\n    const classList:any = classNames(classes);\n    const tokenizerClasses: string[] = [];\n    if (defaultClassNames) {\n      tokenizerClasses.push('typeahead-tokenizer');\n    }\n    if (className) {\n      tokenizerClasses.push(className);\n    }\n    const tokenizerClassList = classNames(tokenizerClasses);\n\n    const args2Pass = {\n      placeholder,\n      disabled,\n      inputProps,\n      customClasses,\n      allowCustomValues,\n      initialValue,\n      maxVisible,\n      resultsTruncatedMessage,\n      onKeyPress,\n      onKeyUp,\n      onFocus,\n      onBlur,\n      displayOption,\n      defaultClassNames,\n      filterOption,\n      searchOptions,\n      showOptionsWhenEmpty,\n    };\n\n    return (\n      <div className={tokenizerClassList}>\n        {this.renderTokens()}\n        <Typeahead \n          innerRef={(c: HTMLInputElement) => this.typeaheadElement = c}\n          className={classList}\n          {...args2Pass}\n          options={this.getOptionsForTypeahead()}\n          onOptionSelected={this.addTokenForValue}\n          onKeyDown={this.onKeyDown}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TypeaheadTokenizer;\n"],"names":["define","tslib_1.__extends","classNames","React.createElement","React.Component","Input"],"mappings":"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"}