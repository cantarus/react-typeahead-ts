{"version":3,"file":"typeahead.es6.js","sources":["../src/accessor.ts","../src/typeahead/option.tsx","../src/typeahead/selector.tsx","../src/keyevent.ts","../src/typeahead/index.tsx","../src/tokenizer/token.tsx","../src/tokenizer/index.tsx"],"sourcesContent":["import { OptionToStrFn, Option } from './types';\n\nexport default class Accessor {\n  // tslint:disable-next-line\n  static IDENTITY_FN<T>(input: T): T { return input; }\n\n  static generateAccessor(field: string) {\n    return (object: { [propName: string]: string }) => object[field];\n  }\n\n  static generateOptionToStringFor<T>(prop?: string | Function): OptionToStrFn<T> {\n    if (typeof prop === 'string') {\n      // @ts-ignore\n      return Accessor.generateAccessor(prop);\n    } \n    \n    if (typeof prop === 'function') {\n      return (prop as any);\n    }\n    \n    return function (input: any) { return (input as string); };\n  }\n\n  static valueForOption<T extends Option>(\n    object: T,\n    selector?: string | OptionToStrFn<T> | undefined, \n  ): string | void {\n    if (typeof selector === 'string') {\n      if (typeof object !== 'object') throw new Error(`Invalid object type ${typeof object}`);\n      // @ts-ignore\n      return object[selector];\n    } \n    \n    if (typeof selector === 'function') {\n      return selector(object);\n    }\n\n    if (typeof object === 'string') {\n      return object;\n    }\n    \n    throw new Error(`Invalid object type ${typeof object}`);\n  }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\n\nexport interface CustomClasses {\n  listItem?: string;\n  hover?: string;\n  customAdd?: string;\n  listAnchor?: string;\n}\n\nexport interface Props {\n  customClasses?: CustomClasses;\n  customValue?: string;\n  onClick: Function;\n  children: React.ReactNode;\n  hover?: boolean;\n}\n\n/**\n * A single option within the TypeaheadSelector\n */\nclass TypeaheadOption extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  private getProps() {\n    const customClasses: CustomClasses = { hover: 'hover' };\n    return {\n      ...{\n        customClasses,\n        onClick: (event: React.MouseEvent<HTMLDivElement>) => {\n          event.preventDefault();\n        },\n        hover: false,\n      },\n      ...this.props,\n    };\n  }\n\n  render() {\n    const { \n      customClasses, hover,\n      children, customValue,\n     } = this.getProps();\n\n    const classes: any = { };\n    const { listItem, hover: hoverClass = 'hover', customAdd } = customClasses;\n    classes[hoverClass] = Boolean(hover);\n    if (listItem) {\n      classes[listItem] = Boolean(listItem);\n    }\n\n    if (customValue && customAdd) {\n      classes[customAdd] = Boolean(customAdd);\n    }\n\n    const classList = classNames(classes);\n\n    // For some reason onClick is not fired when clicked on an option\n    // onMouseDown is used here as a workaround of #205 and other\n    // related tickets\n    return (\n      <li className={classList} onClick={this.onClick} onMouseDown={this.onClick}>\n        <a \n          href=\"javascript: void 0;\" \n          className={this.getClasses()} \n        >\n          {children}\n        </a>\n      </li>\n    );\n  }\n\n  getClasses() {\n    const { customClasses } = this.getProps();\n    const classes: any = {\n      'typeahead-option': true,\n    };\n    const { listAnchor } = customClasses;\n    if (listAnchor) {\n      classes[listAnchor] = true;\n    }\n\n    return classNames(classes);\n  }\n\n  onClick(event: React.MouseEvent<HTMLLIElement>) {\n    event.preventDefault();\n    return this.props.onClick(event);\n  }\n}\n\nexport default TypeaheadOption;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport TypeaheadOption from './option';\nimport { CustomClasses, OptionSelector, Option } from '../types';\n\nexport interface Props<Opt extends Option> {\n  options: Opt[];\n  allowCustomValues?: number;\n  customClasses?: CustomClasses;\n  customValue?: string;\n  selectionIndex?: number;\n  onOptionSelected?: OptionSelector;\n  displayOption: Function;\n  defaultClassNames?: boolean;\n  areResultsTruncated?: boolean;\n  resultsTruncatedMessage?: string;\n  innerRef?: ((c: HTMLElement) => void);\n}\n\n/**\n * Container for the options rendered as part of the autocompletion process\n * of the typeahead\n */\nclass TypeaheadSelector<T> extends React.Component<Props<T>> {\n  // Hack to handle the buggy typescript defaultProps\n  private getProps() {\n    const customClasses: CustomClasses = {};\n    return {\n      ...{\n        customClasses,\n        allowCustomValues: 0,\n        onOptionSelected: () => {},\n        defaultClassNames: true,\n      },\n      ...this.props,\n    };\n  }\n\n  render() {\n    const { \n      options, customClasses, customValue, displayOption,\n      defaultClassNames, allowCustomValues, selectionIndex,\n      areResultsTruncated, resultsTruncatedMessage,\n    } = this.getProps();\n    // Don't render if there are no options to display\n    if (!options.length && allowCustomValues <= 0) {\n      return false;\n    }\n\n    const classes: any = {\n      'typeahead-selector': defaultClassNames,\n    };\n    const { results: resClass } = customClasses;\n    if (resClass) {\n      classes[resClass] = true;\n    }\n    const classList = classNames(classes);\n\n    // CustomValue should be added to top of results list with different class name\n    let customValueComponent;\n    let customValueOffset = 0;\n    if (customValue) {\n      customValueOffset += 1;\n      // TODO: needed ref? ref={customValue} \n      customValueComponent = (\n        <TypeaheadOption \n          key={customValue}\n          hover={selectionIndex === 0}\n          customClasses={customClasses}\n          customValue={customValue}\n          onClick={this.onClick.bind(this, customValue)}\n        >\n          {customValue}\n        </TypeaheadOption>\n      );\n    }\n\n    const results = options.map((result, i) => {\n      const displayString = displayOption(result, i);\n      const uniqueKey = displayString + '_' + i;\n      // TODO: needed ref? ref={uniqueKey} \n      return (\n        <TypeaheadOption \n          key={uniqueKey}\n          hover={selectionIndex === i + customValueOffset}\n          customClasses={customClasses}\n          onClick={this.onClick.bind(this, result)}\n        >\n          {displayString}\n        </TypeaheadOption>\n      );\n    });\n\n    if (areResultsTruncated && resultsTruncatedMessage) {\n      const resultsTruncatedClasses: any = {\n        'results-truncated': true,\n      };\n      const { resultsTruncated } = customClasses;\n      if (resultsTruncated) {\n        resultsTruncatedClasses[resultsTruncated] = true;\n      }\n      const resultsTruncatedClassList = classNames(resultsTruncatedClasses);\n\n      results.push(\n        <li key=\"results-truncated\" className={resultsTruncatedClassList}>\n          {this.props.resultsTruncatedMessage}\n        </li>);\n    }\n    \n    return (\n      <ul className={classList}>\n        {customValueComponent}\n        {results}\n      </ul>\n    );\n  }\n\n  private onClick(result: string, event: React.MouseEvent<HTMLDivElement>) {\n    const { onOptionSelected } = this.props;\n    if (!onOptionSelected) return;\n\n    return onOptionSelected(result, event);\n  }\n}\n\nexport default TypeaheadSelector;\n","/**\n * PolyFills make me sad\n */\n// @ts-ignore\nconst KeyEvent: { [propName: string]: number } = KeyEvent || {};\nKeyEvent.DOM_VK_UP = KeyEvent.DOM_VK_UP || 38;\nKeyEvent.DOM_VK_DOWN = KeyEvent.DOM_VK_DOWN || 40;\nKeyEvent.DOM_VK_BACK_SPACE = KeyEvent.DOM_VK_BACK_SPACE || 8;\nKeyEvent.DOM_VK_RETURN = KeyEvent.DOM_VK_RETURN || 13;\nKeyEvent.DOM_VK_ENTER = KeyEvent.DOM_VK_ENTER || 14;\nKeyEvent.DOM_VK_ESCAPE = KeyEvent.DOM_VK_ESCAPE || 27;\nKeyEvent.DOM_VK_TAB = KeyEvent.DOM_VK_TAB || 9;\n\nexport default KeyEvent;\n","import * as React from 'react';\nimport bind from 'bind-decorator';\nimport Accessor from '../accessor';\nimport TypeaheadSelector, { Props as TypelistProps } from './selector';\nimport KeyEvent from '../keyevent';\nimport fuzzy, { FilterOptions } from 'fuzzy';\nimport classNames from 'classnames';\nimport { CustomClasses, Option, OptionToStrFn } from '../types';\n\nexport type OnOptionSelectArg<Opt extends Option> = \n  ((option: Opt | string, event?: React.SyntheticEvent<HTMLAnchorElement>) => any);\n\nexport type AnyReactWithProps<Opt extends Option> = \n  React.Component<TypelistProps<Opt>> | \n  React.PureComponent<TypelistProps<Opt>> |\n  React.SFC<TypelistProps<Opt>>;\n\nexport interface Props<Opt extends Option, Mapped> extends  React.InputHTMLAttributes<HTMLInputElement> {\n  name?: string;\n  customClasses?: CustomClasses;\n  maxVisible?: number;\n  resultsTruncatedMessage?: string;\n  options: Opt[];\n  allowCustomValues?: number;\n  initialValue?: string;\n  value?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  textarea?: boolean;\n  inputProps?: object;\n  onOptionSelected?: OnOptionSelectArg<Mapped>;\n  filterOption?: string | ((value: string, option: Opt) => boolean);\n  searchOptions?: ((value: string, option: Opt[]) => Mapped[]);\n  displayOption?: string | OptionToStrFn<Mapped>;\n  inputDisplayOption?: string | OptionToStrFn<Mapped>;\n  formInputOption?: string | OptionToStrFn<Mapped>;\n  defaultClassNames?: boolean;\n  customListComponent?: AnyReactWithProps<Opt>;\n  showOptionsWhenEmpty?: boolean;\n  innerRef?: (c: HTMLInputElement) => any;\n}\n\nexport interface State<Mapped> {\n  // The options matching the entry value\n  searchResults: Mapped[];\n\n  // This should be called something else, \"entryValue\"\n  entryValue: string;\n\n  // A valid typeahead value\n  selection?: string;\n\n  // Index of the selection\n  selectionIndex?: number;\n\n  // Keep track of the focus state of the input element, to determine\n  // whether to show options when empty (if showOptionsWhenEmpty is true)\n\n  isFocused: boolean;\n  // true when focused, false onOptionSelected\n  showResults: boolean;\n}\n\n/**\n * A \"typeahead\", an auto-completing text input\n *\n * Renders an text input that shows options nearby that you can use the\n * keyboard or mouse to select.  Requires CSS for MASSIVE DAMAGE.\n */\nclass Typeahead<T extends Option, Mapped> extends React.Component<\n  Props<T, Mapped>,\n  State<Mapped>\n> {\n  constructor(props: Props<T, Mapped>) {\n    super(props);\n\n    this.state = {\n      // The options matching the entry value\n      searchResults: this.getOptionsForValue(props.initialValue, props.options),\n\n      // This should be called something else, \"entryValue\"\n      entryValue: props.value || '',\n\n      // A valid typeahead value\n      selection: props.value,\n\n      // Index of the selection\n      selectionIndex: undefined,\n\n      // Keep track of the focus state of the input element, to determine\n      // whether to show options when empty (if showOptionsWhenEmpty is true)\n      isFocused: false,\n\n      // true when focused, false onOptionSelected\n      showResults: false,\n    };\n  }\n\n  public inputElement?: HTMLInputElement;\n\n  // Hack due to buggy defaultprops handling in typescript\n  private getProps() {\n    const customClasses: CustomClasses = {};\n    return {\n      ...{\n        customClasses,\n        allowCustomValues: 0,\n        initialValue: '',\n        value: '',\n        disabled: false,\n        textarea: false,\n        customListComponent: TypeaheadSelector,\n        showOptionsWhenEmpty: false,\n      },\n      ...this.props,\n    };\n  }\n\n  private shouldSkipSearch(input?: string) {\n    const emptyValue = !input || input.trim().length === 0;\n\n    // this.state must be checked because it may not be defined yet if this function\n    // is called from within getInitialState\n    const isFocused = this.state && this.state.isFocused;\n    return !(this.props.showOptionsWhenEmpty && isFocused) && emptyValue;\n  }\n\n  getOptionsForValue(value?: string, options?: T[]): Mapped[] {\n    if (this.shouldSkipSearch(value)) {\n      return [];\n    }\n\n    const searchOptions = this.generateSearchFunction();    \n    return searchOptions(value || '', options || this.getProps().options);\n  }\n\n  setEntryText(value: string) {\n    if (!this.inputElement) return;\n    this.inputElement.value = value;\n    this.onTextEntryUpdated();\n  }\n\n  @bind\n  focus() {\n    if (!this.inputElement) return;\n    this.inputElement.focus();\n  }\n\n  private hasCustomValue() {\n    const { allowCustomValues } = this.getProps();\n    const { entryValue, searchResults } = this.state;\n\n    if (\n      !allowCustomValues ||\n      allowCustomValues > 0 ||\n      entryValue.length >= allowCustomValues\n    ) {\n      return false;\n    }\n\n    const mapper = this.getInputOptionToStringMapper();\n    return searchResults.map(mapper).indexOf(this.state.entryValue) < 0;\n  }\n\n  private getCustomValue() {\n    if (this.hasCustomValue()) {\n      return this.state.entryValue;\n    }\n    return undefined;\n  }\n\n  private renderIncrementalSearchResults() {\n    const { entryValue, selection, searchResults, selectionIndex } = this.state;\n    const {\n      maxVisible,\n      resultsTruncatedMessage,\n      displayOption,\n      allowCustomValues,\n      customClasses,\n      defaultClassNames,\n    } = this.getProps();\n\n    // Nothing has been entered into the textbox\n    if (this.shouldSkipSearch(entryValue)) {\n      return '';\n    }\n\n    // Something was just selected\n    if (selection) {\n      return '';\n    }\n\n    const truncated: boolean = Boolean(\n      maxVisible && searchResults.length > maxVisible,\n    );\n    return (\n      <TypeaheadSelector\n        options={\n          maxVisible ? searchResults.slice(0, maxVisible) : searchResults\n        }\n        areResultsTruncated={truncated}\n        onOptionSelected={this.onOptionSelected}\n        customValue={this.getCustomValue()}\n        displayOption={Accessor.generateOptionToStringFor(displayOption)}\n        {...{\n          allowCustomValues,\n          resultsTruncatedMessage,\n          customClasses,\n          selectionIndex,\n          defaultClassNames,\n        }}\n      />\n    );\n  }\n\n  getSelection(): Mapped | string | undefined {\n    let index = this.state.selectionIndex;\n    if (index === undefined) return undefined;\n\n    if (this.hasCustomValue()) {\n      if (index === 0) {\n        return this.state.entryValue;\n      }\n      index -= 1;\n    }\n\n    return this.state.searchResults[index];\n  }\n\n  private inputMapper?: OptionToStrFn<Mapped>;\n  private getInputOptionToStringMapper(): OptionToStrFn<Mapped> {\n    if (this.inputMapper) {\n      return this.inputMapper;\n    }\n\n    const {\n      formInputOption,\n      inputDisplayOption,\n      displayOption,\n    } = this.getProps();\n    const anyToStrFn = formInputOption || inputDisplayOption || displayOption;\n    this.inputMapper = Accessor.generateOptionToStringFor(anyToStrFn);\n\n    return this.inputMapper;\n  }\n\n  private displayMapper?: OptionToStrFn<Mapped>;\n  private getDisplayOptionToStringMapper(): OptionToStrFn<Mapped> {\n    if (this.displayMapper) {\n      return this.displayMapper;\n    }\n\n    const { displayOption, inputDisplayOption } = this.getProps();\n    this.displayMapper = Accessor.generateOptionToStringFor(\n      inputDisplayOption || displayOption,\n    );\n\n    return this.displayMapper;\n  }\n\n  @bind\n  private onOptionSelected(\n    option: Mapped | string,\n    event: React.SyntheticEvent<any>,\n  ) {\n    if (!this.inputElement) throw new Error('No input element');\n    this.inputElement.focus();\n\n    let optionString: string;\n    let formInputOptionString: string;\n    if (typeof option === 'string') {\n      optionString = option as string;\n      formInputOptionString = option as string;\n    } else {\n      const displayOption = this.getDisplayOptionToStringMapper();\n      optionString = displayOption(option, 0);\n\n      const formInputOption = this.getInputOptionToStringMapper();\n      formInputOptionString = formInputOption(option);\n    }\n\n    this.inputElement.value = optionString;\n    this.setState({\n      searchResults: this.getOptionsForValue(optionString),\n      selection: formInputOptionString,\n      entryValue: optionString,\n      showResults: false,\n    });\n    return (\n      this.props.onOptionSelected && this.props.onOptionSelected(option, event)\n    );\n  }\n\n  @bind\n  private onTextEntryUpdated(newValue?: string) {\n    if (!this.inputElement) throw new Error('No input element');\n    const value = newValue === undefined ? this.inputElement.value : newValue;\n\n    this.setState({\n      searchResults: this.getOptionsForValue(value),\n      selection: '',\n      entryValue: value,\n    });\n  }\n\n  @bind\n  private onEnter(event: React.KeyboardEvent<HTMLInputElement>) {\n    const selection = this.getSelection();\n    if (!selection) {\n      return this.props.onKeyDown && this.props.onKeyDown(event);\n    }\n    return this.onOptionSelected(selection, event);\n  }\n\n  @bind\n  private onEscape() {\n    this.setState({\n      selectionIndex: undefined,\n    });\n  }\n\n  @bind\n  private onTab(event: React.KeyboardEvent<HTMLInputElement>) {\n    const selection = this.getSelection();\n\n    let option = selection\n      ? selection\n      : this.state.searchResults.length > 0\n        ? this.state.searchResults[0]\n        : undefined;\n\n    if (option === undefined && this.hasCustomValue()) {\n      option = this.getCustomValue();\n    }\n\n    if (option !== undefined) {\n      return this.onOptionSelected(option, event);\n    }\n  }\n\n  eventMap() {\n    const events: any = {};\n\n    events[KeyEvent.DOM_VK_UP] = this.navUp;\n    events[KeyEvent.DOM_VK_DOWN] = this.navDown;\n    events[KeyEvent.DOM_VK_RETURN] = events[\n      KeyEvent.DOM_VK_ENTER\n    ] = this.onEnter;\n    events[KeyEvent.DOM_VK_ESCAPE] = this.onEscape;\n    events[KeyEvent.DOM_VK_TAB] = this.onTab;\n\n    return events;\n  }\n\n  private nav(delta: number) {\n    if (!this.hasHint()) {\n      return;\n    }\n\n    const { selectionIndex, searchResults } = this.state;\n    const { maxVisible } = this.getProps();\n    let newIndex =\n      selectionIndex === undefined\n        ? delta === 1\n          ? 0\n          : delta\n        : selectionIndex + delta;\n    let length = maxVisible\n      ? searchResults.slice(0, maxVisible).length\n      : searchResults.length;\n    if (this.hasCustomValue()) {\n      length += 1;\n    }\n\n    if (newIndex < 0) {\n      newIndex += length;\n    } else if (newIndex >= length) {\n      newIndex -= length;\n    }\n\n    this.setState({ selectionIndex: newIndex });\n  }\n\n  @bind\n  navDown() {\n    this.nav(1);\n  }\n\n  @bind\n  navUp() {\n    this.nav(-1);\n  }\n\n  @bind\n  private onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { onChange } = this.getProps();\n    if (onChange) {\n      onChange(event);\n    }\n\n    this.onTextEntryUpdated(event.target.value);\n  }\n\n  @bind\n  private onKeyDown(event: React.KeyboardEvent<HTMLInputElement>) {\n    // If there are no visible elements, don't perform selector navigation.\n    // Just pass this up to the upstream onKeydown handler.\n    // Also skip if the user is pressing the shift key,\n    // since none of our handlers are looking for shift\n    if (!this.hasHint() || event.shiftKey) {\n      return this.props.onKeyDown && this.props.onKeyDown(event);\n    }\n\n    const handler = this.eventMap()[event.keyCode];\n    if (handler) {\n      handler(event);\n    } else {\n      return this.props.onKeyDown && this.props.onKeyDown(event);\n    }\n    // Don't propagate the keystroke back to the DOM/browser\n    event.preventDefault();\n  }\n\n  componentWillReceiveProps(nextProps: Props<T, Mapped>) {\n    const searchResults = this.getOptionsForValue(\n      this.state.entryValue,\n      nextProps.options,\n    );\n    const showResults = Boolean(searchResults.length) && this.state.isFocused;\n    this.setState({ searchResults, showResults });\n  }\n\n  render() {\n    const {\n      customClasses: { input },\n      className,\n    } = this.getProps();\n    const inputClasses: any = {};\n    if (input) {\n      inputClasses[input] = true;\n    }\n    const inputClassList = classNames(inputClasses);\n\n    const classes: any = {\n      typeahead: this.props.defaultClassNames,\n    };\n    if (className) {\n      classes[className] = true;\n    }\n    const classList = classNames(classes);\n\n    return (\n      <div className={classList}>\n        {this.renderHiddenInput()}\n        <input\n          ref={(c: HTMLInputElement) => {\n            this.inputElement = c;\n            this.props.innerRef && this.props.innerRef(c);\n          }}\n          type={this.props.textarea ? 'textarea' : 'text'}\n          disabled={this.props.disabled}\n          {...this.props.inputProps}\n          placeholder={this.props.placeholder}\n          className={inputClassList}\n          value={this.state.entryValue}\n          onChange={this.onChange}\n          onKeyDown={this.onKeyDown}\n          onKeyPress={this.props.onKeyPress}\n          onKeyUp={this.props.onKeyUp}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n        />\n        {this.state.showResults && this.renderIncrementalSearchResults()}\n      </div>\n    );\n  }\n\n  @bind\n  private onFocus(event: React.FocusEvent<HTMLInputElement>) {\n    this.setState({ isFocused: true, showResults: true }, () => {\n      this.onTextEntryUpdated();\n    });\n    this.props.onFocus && this.props.onFocus(event);\n  }\n\n  @bind\n  private onBlur(event: React.FocusEvent<HTMLInputElement>) {\n    this.setState({ isFocused: false }, () => {\n      this.onTextEntryUpdated();\n    });\n    this.props.onBlur && this.props.onBlur(event);\n  }\n\n  private renderHiddenInput() {\n    const { name } = this.getProps();\n    if (!name) {\n      return null;\n    }\n\n    return <input type=\"hidden\" name={name} value={this.state.selection} />;\n  }\n\n  private searchFunction?: (value: string, options: T[]) => Mapped[];\n  private generateSearchFunction(): (value: string, options: T[]) => Mapped[] {\n    if (this.searchFunction) {\n      return this.searchFunction;\n    }\n    const { searchOptions, filterOption } = this.getProps();\n    if (typeof searchOptions === 'function') {\n      if (filterOption !== undefined) {\n        console.warn(\n          'searchOptions prop is being used, filterOption prop will be ignored',\n        );\n      }\n\n      this.searchFunction = searchOptions;\n\n    } else if (typeof filterOption === 'function') {\n  \n      this.searchFunction = (value: string, options: T[]): Mapped[] =>\n      options.filter(o => filterOption(value, o)).map(a => a as any);\n      \n    } else {\n  \n      let mapper: (input: any) => string;\n      if (typeof filterOption === 'string') {\n        mapper = Accessor.generateAccessor(filterOption);\n      } else {\n        mapper = Accessor.IDENTITY_FN;\n      }\n      \n      \n      this.searchFunction = (value: string, options: T[]) => {\n        const fuzzyOpt: FilterOptions<any> = { extract: mapper };\n        return fuzzy\n          .filter(value, options, fuzzyOpt)\n          .map((res: { index: number }) => options[res.index] as any);\n      };\n    }\n\n    return this.searchFunction;\n  }\n\n  private hasHint() {\n    return this.state.searchResults.length > 0 || this.hasCustomValue();\n  }\n}\n\nexport default Typeahead;\n","import * as React from 'react';\nimport classNames from 'classnames';\n\nexport interface Props {\n  className?: string;\n  name?: string;\n  children: React.ReactNode | string;\n  object: string | object;\n  onRemove: Function;\n  value: string;\n  key: string | number;\n}\n\n/**\n * Encapsulates the rendering of an option that has been \"selected\" in a\n * TypeaheadTokenizer\n */ \nclass Token extends React.Component<Props> {\n  \n  render() {\n    const className = classNames([\n      'typeahead-token',\n      this.props.className,\n    ]);\n\n    return (\n      <div className={className} key={this.props.key}>\n        {this.renderHiddenInput()}\n        {this.props.children}\n        {this.renderCloseButton()}\n      </div>\n    );\n  }\n\n  private renderHiddenInput() {\n    const { name, value, object } = this.props;\n    // If no name was set, don't create a hidden input\n    if (!name) {\n      return null;\n    }\n\n    const hiddenValue = value || object;\n    if (typeof hiddenValue !== 'string') {\n      throw new Error('Expected either string value or string object');\n    }\n    return (\n      <input\n        type=\"hidden\"\n        name={name + '[]'}\n        value={hiddenValue}\n      />\n    );\n  }\n\n  renderCloseButton() {\n    if (!this.props.onRemove) {\n      return '';\n    }\n\n    return (\n      <a\n        className={this.props.className || 'typeahead-token-close'} \n        href=\"#\" \n        onClick={(event: React.MouseEvent<HTMLAnchorElement>) => {\n          this.props.onRemove(this.props.object);\n          event.preventDefault();\n        }}\n      >\n        &#x00d7;\n      </a>);\n  }\n}\n\nexport default Token;\n","import * as React from 'react';\nimport bind from 'bind-decorator';\nimport Accessor from '../accessor';\nimport Token from './token';\nimport KeyEvent from '../keyevent';\nimport Typeahead from '../typeahead';\nimport classNames from 'classnames';\nimport { TokenCustomClasses, Option, OptionToStrFn } from '../types';\n\nconst arraysAreDifferent = (array1: any[], array2: any[]): boolean => {\n  if (array1.length !== array2.length) {\n    return true;\n  }\n\n  for (let i = array2.length - 1; i >= 0; i -= 1) {\n    if (array2[i] !== array1[i]) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nexport interface Props<Opt extends Option> extends React.InputHTMLAttributes<HTMLInputElement> {\n  name?: string;\n  options: Opt[];\n  customClasses?: TokenCustomClasses;\n  allowCustomValues?: number;\n  defaultSelected: any[];\n  initialValue?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  inputProps: object;\n  onTokenRemove?: Function;\n  onTokenAdd?: Function;\n  filterOption?: string | Function;\n  searchOptions?: Function;\n  displayOption?: string | OptionToStrFn<Opt>;\n  formInputOption?: string | OptionToStrFn<Opt>;\n  maxVisible?: number;\n  resultsTruncatedMessage?: string;\n  defaultClassNames?: boolean;\n  showOptionsWhenEmpty?: boolean;\n  innerRef?: (c: HTMLInputElement) => any;\n}\n\nexport interface State<Opt extends Option> {\n  selected: Opt[];\n}\n\n/**\n * A typeahead that, when an option is selected, instead of simply filling\n * the text entry widget, prepends a renderable \"token\", that may be deleted\n * by pressing backspace on the beginning of the line with the keyboard.\n */\nclass TypeaheadTokenizer<T> extends React.Component<Props<T>, State<T>> {\n  constructor(props: Props<T>) {\n    super(props);\n\n    const { defaultSelected = [] } = props;\n    this.state = {\n      // We need to copy this to avoid incorrect sharing\n      // of state across instances (e.g., via getDefaultProps())\n      selected: defaultSelected.slice(0),\n    };\n  }\n\n  private getProps() {\n    const customClasses: TokenCustomClasses = {};\n    return {\n      ...{\n        customClasses,\n        allowCustomValues: 0,\n        disabled: false,\n        inputProps: {},\n        defaultClassNames: true,\n        showOptionsWhenEmpty: false,\n      },\n      ...this.props,\n    };\n  }\n\n  private inputMapper?: OptionToStrFn<T>;\n  private getInputOptionToStringMapper(): OptionToStrFn<T> {\n    if (this.inputMapper) {\n      return this.inputMapper;\n    }\n\n    const { formInputOption, displayOption } = this.getProps();\n    const anyToStrFn = formInputOption || displayOption;\n    this.inputMapper = Accessor.generateOptionToStringFor(anyToStrFn);\n\n    return this.inputMapper;\n  }\n\n  componentWillReceiveProps(nextProps: Props<T>) {\n    // if we get new defaultProps, update selected\n    if (arraysAreDifferent(this.props.defaultSelected, nextProps.defaultSelected)) {\n      this.setState({ selected: nextProps.defaultSelected.slice(0) });\n    }\n  }\n\n  typeaheadElement?: HTMLInputElement;\n  focus() {\n    if (!this.typeaheadElement) throw new Error('No typeahead element');\n    this.typeaheadElement.focus();\n  }\n\n  getSelectedTokens() {\n    return this.state.selected;\n  }\n\n  // TODO: Support initialized tokens\n  //\n  private renderTokens() {\n    const { \n      customClasses: { token }, displayOption, formInputOption, name,\n    } = this.getProps();\n    const tokenClasses: any = {};\n    if (token) tokenClasses[token] = true;\n    const classList: string = classNames(tokenClasses);\n\n    const result = this.state.selected\n      .map((selected) => {\n        const displayString = Accessor.valueForOption(selected, displayOption);\n        const value = Accessor.valueForOption(selected, formInputOption || displayOption);\n        if (!displayString || !value) throw new Error('Expected string and value to exist');\n\n        const key: string = displayString;\n        return (\n          <Token \n            key={key} \n            className={classList}\n            onRemove={this.removeTokenForValue}\n            object={selected}\n            value={value}\n            name={name}\n          >\n            {displayString}\n          </Token>\n        );\n      });\n    return result;\n  }\n\n  private getOptionsForTypeahead() {\n    // return this.props.options without this.selected\n    return this.props.options;\n  }\n\n  @bind\n  private onKeyDown(event: React.KeyboardEvent<HTMLInputElement>) {\n    // We only care about intercepting backspaces\n    if (event.keyCode === KeyEvent.DOM_VK_BACK_SPACE) {\n      return this.handleBackspace(event);\n    }\n    this.props.onKeyDown && this.props.onKeyDown(event);\n  }\n\n  private handleBackspace(event: React.KeyboardEvent<HTMLInputElement>) {\n    // No tokens\n    if (!this.state.selected.length) {\n      return;\n    }\n\n    // Remove token ONLY when bksp pressed at beginning of line\n    // without a selection\n    if (!this.typeaheadElement) throw new Error('Expected typeahead element to exist');\n    if (this.typeaheadElement.selectionStart === this.typeaheadElement.selectionEnd &&\n        this.typeaheadElement.selectionStart === 0) {\n      this.removeTokenForValue(\n        this.state.selected[this.state.selected.length - 1]);\n      event.preventDefault();\n    }\n  }\n\n  private getSelectedIndex(value: T) {\n    const mapper = this.getInputOptionToStringMapper();\n    const searchStr: string = mapper(value);\n    return this.state.selected\n      .map(mapper)\n      .indexOf(searchStr);\n  }\n  private removeTokenForValue(value: T) {\n    const index = this.getSelectedIndex(value);\n    if (index === -1) {\n      return;\n    }\n\n    this.state.selected.splice(index, 1);\n    this.setState({ selected: this.state.selected });\n    this.props.onTokenRemove && this.props.onTokenRemove(value);\n    return;\n  }\n\n  @bind\n  private addTokenForValue(value: T) {\n    let { selected } = this.state;\n    if (this.getSelectedIndex(value) !== -1) {\n      return;\n    }\n    selected = [...selected, value];\n    this.setState({ selected });\n    \n    if (!this.typeaheadElement) throw new Error('Expected typahead to be set');\n\n    this.typeaheadElement.value = '';\n    this.props.onTokenAdd && this.props.onTokenAdd(value);\n  }\n\n  render() {\n    const { \n      className, customClasses = {}, disabled, inputProps,\n      allowCustomValues, initialValue = '',\n      maxVisible, resultsTruncatedMessage, placeholder,\n      onKeyPress, onKeyUp, onFocus, onBlur,\n      showOptionsWhenEmpty, displayOption,\n      defaultClassNames, filterOption,\n      searchOptions,\n    } = this.getProps();\n    const classes: any = {};\n    const { typeahead } = customClasses;\n    if (typeahead) {\n      classes[typeahead] = true;\n    }\n    const classList:any = classNames(classes);\n    const tokenizerClasses: string[] = [];\n    if (defaultClassNames) {\n      tokenizerClasses.push('typeahead-tokenizer');\n    }\n    if (className) {\n      tokenizerClasses.push(className);\n    }\n    const tokenizerClassList = classNames(tokenizerClasses);\n\n    const args2Pass = {\n      placeholder,\n      disabled,\n      inputProps,\n      customClasses,\n      allowCustomValues,\n      initialValue,\n      maxVisible,\n      resultsTruncatedMessage,\n      onKeyPress,\n      onKeyUp,\n      onFocus,\n      onBlur,\n      displayOption,\n      defaultClassNames,\n      filterOption,\n      searchOptions,\n      showOptionsWhenEmpty,\n    };\n\n    return (\n      <div className={tokenizerClassList}>\n        {this.renderTokens()}\n        <Typeahead \n          // @ts-ignore - issue with addTokenForValue!?\n          innerRef={(c: HTMLInputElement) => this.typeaheadElement = c}\n          className={classList}\n          {...args2Pass}\n          options={this.getOptionsForTypeahead()}\n          onOptionSelected={this.addTokenForValue}\n          onKeyDown={this.onKeyDown}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TypeaheadTokenizer;\n"],"names":["tslib_1.__extends","React.createElement","React.Component","tslib_1.__decorate"],"mappings":"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"}